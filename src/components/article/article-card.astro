---
import { getArticleLink, getFormattedDate } from "@helpers/article";
import { formatDateForDatetime } from "@helpers/date";
import type { CollectionEntry } from "astro:content";
import { articleCardWidth } from "const";
import { BlogType } from "content/config";
import MiddleDot from "../atoms/middle-dot.astro";
import ReadArticle from "./read-article.astro";

interface Props {
    article: CollectionEntry<"blog">;
}

const { article } = Astro.props;
const { title, publicationDate, category, editDate, readingTime } = article.data;
const formattedPubTime = getFormattedDate(publicationDate);
const formattedEditDate = getFormattedDate(editDate, true);
const isHome = Astro.url.pathname === "/";
---

<a href={getArticleLink(article.slug)}>
    <article class=`group py-4 ${articleCardWidth}`>
        <h2 class="text-balance text-2xl font-medium tracking-tighter">
            {title}
        </h2>
        <div class="flex items-center gap-2 sm:gap-3">
            {
                isHome && (
                    <>
                        <span class:list={[category === BlogType.dev ? "text-dev" : "text-beyond"]}>
                            {category === BlogType.dev ? "dev" : "beyond"}
                        </span>
                        <MiddleDot />
                    </>
                )
            }
            <time class="text-font-color-muted" datetime={formatDateForDatetime(publicationDate)}
                >{formattedPubTime}</time
            >
            {
                editDate && formattedEditDate && (
                    <>
                        <MiddleDot />
                        <time
                            class="text-font-color-muted"
                            datetime={formatDateForDatetime(editDate)}
                        >
                            Updated {formattedEditDate}
                        </time>
                    </>
                )
            }
        </div>
        <div class="flex justify-between text-font-color-muted">
            <p>
                {readingTime} min read
            </p>
            <ReadArticle />
        </div>
    </article>
</a>
