---
import { getArticleLink, getFormattedDate } from "@helpers/article";
import { formatDateForDatetime } from "@helpers/date";
import { Icon } from "astro-icon/components";
import type { CollectionEntry } from "astro:content";
import { articleCardWidth } from "const";
import { BlogType } from "content.config";
import MiddleDot from "../atoms/middle-dot.astro";
import ReadArticle from "./read-article.astro";

interface Props {
    article: CollectionEntry<"blog">;
}

const { article } = Astro.props;
const { title, publicationDate, category, editDate, readingTime } = article.data;
const formattedPubTime = getFormattedDate(publicationDate);
const formattedEditDate = getFormattedDate(editDate);
const isHome = Astro.url.pathname === "/";
---

<article class:list={["group py-4", articleCardWidth]}>
    <a href={getArticleLink(article.id)}>
        <h2 class="text-lg font-medium tracking-tighter text-balance sm:text-2xl">
            {title}
        </h2>
        <div
            class="text-font-color-muted flex flex-wrap items-center gap-1 text-sm sm:gap-2 sm:text-base"
        >
            {
                isHome && (
                    <>
                        <span class="flex items-center">
                            <Icon
                                name="branch"
                                class:list={[
                                    "mr-1 inline-block h-4 w-4",
                                    category === BlogType.dev ? "text-dev" : "text-beyond",
                                ]}
                            />
                            {category === BlogType.dev ? "dev" : "beyond"}
                        </span>
                        <MiddleDot />
                    </>
                )
            }
            <time datetime={formatDateForDatetime(publicationDate)}>{formattedPubTime}</time>
            {
                editDate && formattedEditDate && (
                    <>
                        <MiddleDot />
                        <time datetime={formatDateForDatetime(editDate)}>
                            Updated, {formattedEditDate}
                        </time>
                    </>
                )
            }
            <MiddleDot />
            <span>{readingTime} min read</span>
        </div>
        <ReadArticle />
    </a>
</article>
